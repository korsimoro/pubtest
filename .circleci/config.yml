# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build-and-deploy-preview:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: bring submodules down
          command: |
            git submodule update --init

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./docs-toolkit/docutil/local-requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies and build site
          command: |
            . ~/repo/docs-toolkit/kbash/activate.sh
            pd setup docutil
            cat /home/circleci/repo/docs-toolkit/docutil/setup-logs/*
            pd setup mkdocs
            cat /home/circleci/repo/docs-toolkit/mkdocs/setup-logs/*
            cp ~/repo/README.md ~/repo/docs/mkdocs/poc/src/details.md
            pd build-all

      - save_cache:
          paths:
            - ./docs-toolkit/docutil/venv
            - ./docs-toolkit/mkdocs/venv
          key: v1-dependencies-{{ checksum "./docs-toolkit/docutil/local-requirements.txt" }}

      - run:
          name: push data to master and trigger jekyll build phase
          command: |
            if [ "${CIRCLE_BRANCH}" == "testit" ]; then
              git config user.email "eric@korsimoro.com"
              git config user.name "CircleCI Build"
              cd ~/repo
              git rm -rf docs/preview
              mkdir -p docs/preview
              cd docs
              tar -cf - * | tar -C preview -xf -
              git add preview
              echo "Committing"
              git commit -a -m "Publishing Update From CircleCI"
              git push origin master
              echo "Cleanup"
              git checkout testit
            fi

  build-and-deploy:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: bring submodules down
          command: |
            git submodule update --init
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./docs-toolkit/docutil/local-requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            . ~/repo/docs-toolkit/kbash/activate.sh
            pd setup docutil
            cat /home/circleci/repo/docs-toolkit/docutil/setup-logs/*
            pd setup mkdocs
            cat /home/circleci/repo/docs-toolkit/mkdocs/setup-logs/*
            cp ~/repo/README.md ~/repo/docs/mkdocs/poc/src/details.md
            pd build-all

      - save_cache:
          paths:
            - ./docs-toolkit/docutil/venv
          key: v1-dependencies-{{ checksum "./docs-toolkit/docutil/local-requirements.txt" }}

      - run:
          name: push data to master and trigger jekyll build phase
          command: |
            if [ "${CIRCLE_BRANCH}" == "documentation" ]; then
              git config user.email "eric@korsimoro.com"
              git config user.name "CircleCI Build"
              git add docs
              git commit -m "Publishing Update From CircleCI"
              git checkout master
              echo "Pull built documentation forward"
              git merge -X theirs documentation -m "Merging Documentation"
              echo "Trigger deployment by pushing to master"
              git push origin master
              echo "Cleanup"
              git checkout documentation
            fi

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-and-deploy-preview:
          filters:
            branches:
              only: testit

      - build-and-deploy:
          filters:
            branches:
              only: documentation

