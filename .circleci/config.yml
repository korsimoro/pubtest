# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build-and-deploy-preview:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: build all
          command: |
            git submodule update --init
            . ~/repo/docs-toolkit/kbash/activate.sh
            pd setup docutil
            cat /home/circleci/repo/docs-toolkit/docutil/setup-logs/*
            pd setup mkdocs
            cat /home/circleci/repo/docs-toolkit/mkdocs/setup-logs/*
            cp ~/repo/README.md ~/repo/docs/mkdocs/poc/src/details.md
            pd build-all

      - run:
          name: push data to master and trigger jekyll build phase
          command: |
            if [ "${CIRCLE_BRANCH}" == "testit" ]; then
              git config user.email "eric@korsimoro.com"
              git config user.name "CircleCI Build"
              cd ~/repo
              git rm -rf docs/preview
              mkdir -p docs/preview
              cd docs
              tar -cf - * | tar -C preview -xf -
              git add preview
              echo "Committing"
              git commit -a -m "Publishing Update From CircleCI"
              git push origin master
              echo "Cleanup"
              git checkout testit
            fi

  build-and-deploy:
    docker:
      - image: circleci/ruby:latest
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: build and deploy site from documentation branch
          command: |
            git submodule update --init
            . ~/repo/docs-toolkit/kbash/activate.sh
            sudo apt-get install -y python3-venv
            cat ~/repo/docs-toolkit/docutil/setup-logs/*
            pd setup mkdocs
            cat ~/repo/docs-toolkit/mkdocs/setup-logs/*
            pd setup jekyll
            cat ~/repo/docs-toolkit/jekyll/setup-logs/*
            pd build-all
            if [ "${CIRCLE_BRANCH}" == "documentation" ]; then
              git config user.email "eric@korsimoro.com"
              git config user.name "CircleCI Build"
              cd ~/repo
              mv docs docs-tmp
              git checkout master
              git rm -rf docs
              mv docs-tmp docs
              git add docs
              git commit -m "publishing docs" docs
              git push origin master
            fi

  update-data:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: update data
          command: |
            git submodule update --init
            . ~/repo/docs-toolkit/kbash/activate.sh
            pd setup docutil
            cat /home/circleci/repo/docs-toolkit/docutil/setup-logs/*
            pd build-data
            git config user.email "eric@korsimoro.com"
            git config user.name "CircleCI Build"
            cd ~/repo
            git add .
            git commit -m "updating docs"
            git push origin "${CIRCLE_BRANCH}"

  preview-site:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: update data
          command: |
            git submodule update --init
            . ~/repo/docs-toolkit/kbash/activate.sh
            pd setup docutil
            cat /home/circleci/repo/docs-toolkit/docutil/setup-logs/*
            cp ~/repo/README.md ~/repo/docs/mkdocs/poc/src/details.md
            pd build-data
            git config user.email "eric@korsimoro.com"
            git config user.name "CircleCI Build"
            cd ~/repo
            git add .
            git commit -m "updating docs"
            git push origin "${CIRCLE_BRANCH}"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - update-data:
          filters:
            branches:
              only: /data-.*/
              
      - build-and-deploy-preview:
          filters:
            branches:
              only: testit

      - build-and-deploy:
          filters:
            branches:
              only: documentation
